name: Build & Deploy NGINX to AKS

on:
  push:
    branches:
      - main
  pull_request:

env:
  IMAGE_NAME: nginx-secure
  IMAGE_TAG: latest
  ACR_NAME: ${{ secrets.ACR_NAME }}
  RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ secrets.AKS_CLUSTER }}
  KUBE_NAMESPACE: default

jobs:
  build-and-scan:
    name: Build & Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build & Push Docker Image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.0_Linux-64bit.deb

      - name: Run Trivy Scan on Image
        run: |
          trivy image --exit-code 1 --severity CRITICAL,HIGH $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

      - name: Run Trivy Scan on Config
        run: |
          trivy config --exit-code 1 --severity CRITICAL,HIGH ./k8s

  deploy:
    name: Deploy to AKS
    needs: build-and-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/
          kubectl set image statefulset/nginx-statefulset nginx=$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG -n $KUBE_NAMESPACE
          kubectl rollout status statefulset/nginx-statefulset -n $KUBE_NAMESPACE
